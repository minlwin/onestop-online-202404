<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Bean Creation with Constructor -->
    <context:component-scan base-package="com.jdc.spring.aop"></context:component-scan>

	<aop:config>
		
		<aop:pointcut expression="execution(int getLength(String)) and args(input)" id="adviceArguments"/>
		
		<aop:aspect ref="adviceArgumentsAspect">
			<aop:before method="before" pointcut-ref="adviceArguments" arg-names="input" />
			<aop:after-returning method="afterReturning" pointcut-ref="adviceArguments" arg-names="input,result" returning="result"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="adviceArguments" arg-names="input,ex" throwing="ex"/>
			<aop:after method="after" pointcut-ref="adviceArguments" arg-names="input" />
		</aop:aspect>
		
	</aop:config>
</beans>